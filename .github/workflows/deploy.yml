name: deploy-aws

on: 
  push:
    branches:
      - main

jobs:
  terraform:
    name: Setup Terraform and Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
  
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t consoft-api:latest .
      
      - name: Tag Docker image
        run: docker tag consoft-api:latest ${{ secrets.DOCKER_HUB_USERNAME }}/consoft-api:latest

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/consoft-api:latest

  deploy:
    name: Deploy Application on EC2
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy Docker Image to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/consoft-api:latest
          docker stop consoft-api || true
          docker rm consoft-api || true
          docker run -d --name consoft-api -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/consoft-api:latest
          EOF
